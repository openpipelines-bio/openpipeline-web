---
title: "Cell Ranger post-processing"
namespace: "Ingestion"
description: "Post-processing Cell Ranger datasets."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `cellranger_postprocessing`  
Namespace: `ingestion`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/experiment_website_push/workflows/ingestion/cellranger_postprocessing){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r experiment_website_push -latest \
  -main-script workflows/ingestion/cellranger_postprocessing/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml

```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r experiment_website_push -latest \
  -profile docker \
  -main-script workflows/ingestion/cellranger_postprocessing/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name      |Description                                                                       |Attributes                                |
|:---------|:---------------------------------------------------------------------------------|:-----------------------------------------|
|`--id`    |ID of the sample.                                                                 |`string`, required, example: `"foo"`      |
|`--input` |Input h5mu file created by running Cell Ranger and converting its output to h5mu. |`file`, required, example: `"input.h5mu"` |


### Outputs

|Name       |Description              |Attributes |
|:----------|:------------------------|:----------|
|`--output` |The converted h5mu file. |`file`     |


### Correction arguments

|Name                   |Description                                                   |Attributes     |
|:----------------------|:-------------------------------------------------------------|:--------------|
|`--perform_correction` |Whether or not to run CellBender to perform count correction. |`boolean_true` |


### Filtering arguments

|Name           |Description                                                              |Attributes                 |
|:--------------|:------------------------------------------------------------------------|:--------------------------|
|`--min_genes`  |Minimum number of counts required for a cell to pass filtering.          |`integer`, example: `100`  |
|`--min_counts` |Minimum number of genes expressed required for a cell to pass filtering. |`integer`, example: `1000` |

## Authors

  * Angela Pisco [{{< fa brands github >}}](https://github.com/aopisco) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-0142-2355) (author)
  * Robrecht Cannoodt [{{< fa brands github >}}](https://github.com/rcannood) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-3641-729X) (author, maintainer)

## Visualisation

```{mermaid}
%%| column: screen-inset-shaded
flowchart LR
    p0(Input)
    p9(join)
    p7(from_10xh5_to_h5mu)
    p19(join)
    p17(subset_h5mu)
    p23(toSortedList)
    p25(flatMap)
    p27(filter)
    p35(join)
    p33(cellbender_remove_background)
    p39(mix)
    p38(filter)
    p40(filter)
    p49(join)
    p47(filter_with_counts)
    p52(mix)
    p51(filter)
    p61(join)
    p59(publish)
    p66(Output)
    p38-->p39
    p39-->p40
    p39-->p51
    p51-->p52
    p0-->p9
    p0-->p7
    p7-->p9
    p9-->p19
    p9-->p17
    p17-->p19
    p19-->p23
    p23-->p25
    p25-->p27
    p25-->p38
    p27-->p35
    p27-->p33
    p33-->p35
    p35-->p39
    p40-->p49
    p40-->p47
    p47-->p49
    p49-->p52
    p52-->p61
    p52-->p59
    p59-->p61
    p61-->p66

```
