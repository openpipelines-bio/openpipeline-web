---
title: "Prot multisample"
namespace: "Multiomics"
description: "Processing unimodal multi-sample ADT data."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `prot_multisample`  
Namespace: `multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/0.12.3/./workflows/multiomics/prot_multisample){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.12.3 -latest \
  -main-script ./workflows/multiomics/prot_multisample/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "concatenated"
input: # please fill in - example: "dataset.h5mu"

# Outputs
# output: "$id.$key.output.h5mu"

# QC metrics calculation options
# var_qc_metrics: ["ercc", "highly_variable"]
top_n_vars: [50, 100, 200, 500]

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.12.3 -latest \
  -profile docker \
  -main-script ./workflows/multiomics/prot_multisample/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name      |Description                 |Attributes                                    |
|:---------|:---------------------------|:---------------------------------------------|
|`--id`    |ID of the concatenated file |`string`, required, example: `"concatenated"` |
|`--input` |Path to the samples.        |`file`, required, example: `"dataset.h5mu"`   |


### Outputs

|Name       |Description                     |Attributes                                 |
|:----------|:-------------------------------|:------------------------------------------|
|`--output` |Destination path to the output. |`file`, required, example: `"output.h5mu"` |


### QC metrics calculation options

|Name               |Description                                                                                                                                                                                                                                                                               |Attributes                                                               |
|:------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|
|`--var_qc_metrics` |Keys to select a boolean (containing only True or False) column from .var. For each cell, calculate the proportion of total values for genes which are labeled 'True',  compared to the total sum of the values for all genes. Defaults to the value from --var_name_mitochondrial_genes. |List of `string`, example: `"ercc,highly_variable"`, multiple_sep: `","` |
|`--top_n_vars`     |Number of top vars to be used to calculate cumulative proportions. If not specified, proportions are not calculated. `--top_n_vars 20,50` finds cumulative proportion to the 20th and 50th most expressed vars.                                                                           |List of `integer`, default: `50, 100, 200, 500`, multiple_sep: `","`     |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author)

## Visualisation

```{mermaid}
%%| column: screen-inset-shaded
flowchart LR
    v0(Input)
    v3(toSortedList)
    v5(flatMap)
    v6(toSortedList)
    v8(Output)
    v14(clr)
    v16(join)
    v22(filter)
    v28(grep_annotation_column)
    v30(join)
    v34(mix)
    v33(filter)
    v40(calculate_qc_metrics)
    v42(join)
    v50(publish)
    v52(join)
    v58(Output)
    v5-->v6
    v33-->v34
    v0-->v3
    v3-->v5
    v6-->v8
    v5-->v16
    v5-->v14
    v14-->v16
    v16-->v22
    v16-->v33
    v22-->v30
    v22-->v28
    v28-->v30
    v30-->v34
    v34-->v42
    v34-->v40
    v40-->v42
    v42-->v52
    v42-->v50
    v50-->v52
    v52-->v58

```
