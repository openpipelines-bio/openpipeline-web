---
title: "Prot multisample"
namespace: "Multiomics"
description: "Processing unimodal multi-sample ADT data."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `prot_multisample`  
Namespace: `multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/0.11.3/./workflows/multiomics/prot_multisample){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.11.3 -latest \
  -main-script ./workflows/multiomics/prot_multisample/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "concatenated"
input: # please fill in - example: "dataset.h5mu"

# Outputs
# output: "$id.$key.output.h5mu"

# QC metrics calculation options
top_n_vars: [50, 100, 200, 500]

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.11.3 -latest \
  -profile docker \
  -main-script ./workflows/multiomics/prot_multisample/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name      |Description                 |Attributes                                    |
|:---------|:---------------------------|:---------------------------------------------|
|`--id`    |ID of the concatenated file |`string`, required, example: `"concatenated"` |
|`--input` |Path to the samples.        |`file`, required, example: `"dataset.h5mu"`   |


### Outputs

|Name       |Description                     |Attributes                                 |
|:----------|:-------------------------------|:------------------------------------------|
|`--output` |Destination path to the output. |`file`, required, example: `"output.h5mu"` |


### QC metrics calculation options

|Name           |Description                                                                                                                                                                                                     |Attributes                                                           |
|:--------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------|
|`--top_n_vars` |Number of top vars to be used to calculate cumulative proportions. If not specified, proportions are not calculated. `--top_n_vars 20,50` finds cumulative proportion to the 20th and 50th most expressed vars. |List of `integer`, default: `50, 100, 200, 500`, multiple_sep: `","` |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author)

## Visualisation

```{mermaid}
%%| column: screen-inset-shaded
flowchart LR
    v0(Input)
    v3(toSortedList)
    v5(flatMap)
    v7(toSortedList)
    v9(Output)
    v15(clr)
    v17(join)
    v25(prot_calculate_qc_metrics)
    v27(join)
    v34(Output)
    v0-->v3
    v3-->v5
    v5-->v7
    v7-->v9
    v5-->v17
    v5-->v15
    v15-->v17
    v17-->v27
    v17-->v25
    v25-->v27
    v27-->v34

```
