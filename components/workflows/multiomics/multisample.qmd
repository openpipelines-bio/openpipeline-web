---
title: "Multisample"
namespace: "Multiomics"
description: "This workflow serves as an entrypoint into the 'full_pipeline' in order to re-run the multisample processing and the integration setup."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `multisample`  
Namespace: `multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/0.11.0/./workflows/multiomics/multisample){.btn-action .btn-sm .btn-info .btn role="button"}

:::

An input .h5mu file will 
first be split in order to run the multisample processing per modality. Next, the modalities
are merged again and the integration setup pipeline is executed. Please note that this workflow
assumes that samples from multiple pipelines are already concatenated. 


## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.11.0 -latest \
  -main-script ./workflows/multiomics/multisample/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "foo"
input: # please fill in - example: "input.h5mu"

# Outputs
# output: "$id.$key.output.h5mu"

# Highly variable gene detection
filter_with_hvg_var_output: "filter_with_hvg"
filter_with_hvg_obs_batch_key: "sample_id"

# QC metrics calculation options
var_qc_metrics: ["filter_with_hvg"]
top_n_vars: [50, 100, 200, 500]

# PCA options
pca_overwrite: false

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.11.0 -latest \
  -profile docker \
  -main-script ./workflows/multiomics/multisample/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name      |Description         |Attributes                                |
|:---------|:-------------------|:-----------------------------------------|
|`--id`    |ID of the sample.   |`string`, required, example: `"foo"`      |
|`--input` |Path to the sample. |`file`, required, example: `"input.h5mu"` |


### Outputs

|Name       |Description                     |Attributes                                 |
|:----------|:-------------------------------|:------------------------------------------|
|`--output` |Destination path to the output. |`file`, required, example: `"output.h5mu"` |


### Highly variable gene detection

|Name                              |Description                                                                                                                                                                                                    |Attributes                             |
|:---------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------|
|`--filter_with_hvg_var_output`    |In which .var slot to store a boolean array corresponding to the highly variable genes.                                                                                                                        |`string`, default: `"filter_with_hvg"` |
|`--filter_with_hvg_obs_batch_key` |If specified, highly-variable genes are selected within each batch separately and merged. This simple  process avoids the selection of batch-specific genes and acts as a lightweight batch correction method. |`string`, default: `"sample_id"`       |


### QC metrics calculation options

|Name               |Description                                                                                                                                                                                                                    |Attributes                                                                                             |
|:------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------|
|`--var_qc_metrics` |Keys to select a boolean (containing only True or False) column from .var. For each cell, calculate the proportion of total values for genes which are labeled 'True',  compared to the total sum of the values for all genes. |List of `string`, default: `"filter_with_hvg"`, example: `"ercc,highly_variable"`, multiple_sep: `","` |
|`--top_n_vars`     |Number of top vars to be used to calculate cumulative proportions. If not specified, proportions are not calculated. `--top_n_vars 20,50` finds cumulative proportion to the 20th and 50th most expressed vars.                |List of `integer`, default: `50, 100, 200, 500`, multiple_sep: `","`                                   |


### PCA options

|Name              |Description                             |Attributes     |
|:-----------------|:---------------------------------------|:--------------|
|`--pca_overwrite` |Allow overwriting slots for PCA output. |`boolean_true` |

## Authors


  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author, maintainer)

## Visualisation

```{mermaid}
%%| column: screen-inset-shaded
flowchart LR
    p0(Input)
    p2(toSortedList)
    p4(flatMap)
    p7(filter)
    p12(split_modalities)
    p14(join)
    p21(concat)
    p17(filter)
    p19(test_wf:run_wf:split_modalities_workflow:splitStub)
    p22(flatMap)
    p24(filter)
    p27(toSortedList)
    p29(flatMap)
    p31(toSortedList)
    p33(Output)
    p39(normalize_total)
    p41(join)
    p50(log1p)
    p52(join)
    p61(delete_layer)
    p63(join)
    p72(filter_with_hvg)
    p74(join)
    p83(rna_calculate_qc_metrics)
    p85(join)
    p126(concat)
    p90(filter)
    p93(toSortedList)
    p95(flatMap)
    p97(toSortedList)
    p99(Output)
    p105(clr)
    p107(join)
    p116(prot_calculate_qc_metrics)
    p118(join)
    p123(filter)
    p127(groupTuple)
    p133(merge)
    p135(join)
    p139(filter)
    p143(toSortedList)
    p145(flatMap)
    p152(pca)
    p154(join)
    p163(find_neighbors)
    p165(join)
    p174(umap)
    p176(join)
    p182(concat)
    p181(filter)
    p183(filter)
    p187(toSortedList)
    p189(flatMap)
    p196(pca)
    p198(join)
    p207(find_neighbors)
    p209(join)
    p218(test_wf:run_wf:integration_setup_workflow:initialize_integration_prot:umap:umap_process1)
    p220(join)
    p226(concat)
    p225(filter)
    p234(publish)
    p236(join)
    p241(toSortedList)
    p243(Output)
    p21-->p22
    p126-->p127
    p181-->p182
    p182-->p183
    p182-->p225
    p225-->p226
    p0-->p2
    p2-->p4
    p4-->p7
    p4-->p17
    p7-->p14
    p7-->p12
    p12-->p14
    p14-->p21
    p17-->p19
    p19-->p21
    p22-->p24
    p22-->p90
    p22-->p123
    p24-->p27
    p27-->p29
    p29-->p31
    p31-->p33
    p29-->p41
    p29-->p39
    p39-->p41
    p41-->p52
    p41-->p50
    p50-->p52
    p52-->p63
    p52-->p61
    p61-->p63
    p63-->p74
    p63-->p72
    p72-->p74
    p74-->p85
    p74-->p83
    p83-->p85
    p85-->p126
    p90-->p93
    p93-->p95
    p95-->p97
    p97-->p99
    p95-->p107
    p95-->p105
    p105-->p107
    p107-->p118
    p107-->p116
    p116-->p118
    p118-->p126
    p123-->p126
    p127-->p135
    p127-->p133
    p133-->p135
    p135-->p139
    p135-->p181
    p139-->p143
    p143-->p145
    p145-->p154
    p145-->p152
    p152-->p154
    p154-->p165
    p154-->p163
    p163-->p165
    p165-->p176
    p165-->p174
    p174-->p176
    p176-->p182
    p183-->p187
    p187-->p189
    p189-->p198
    p189-->p196
    p196-->p198
    p198-->p209
    p198-->p207
    p207-->p209
    p209-->p220
    p209-->p218
    p218-->p220
    p220-->p226
    p226-->p236
    p226-->p234
    p234-->p236
    p236-->p241
    p241-->p243

```
