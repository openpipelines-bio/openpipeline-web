---
title: "Prot singlesample"
namespace: "Multiomics"
description: "Processing unimodal single-sample CITE-seq data."
type: "workflow"
toc: false
---

::: {.column-margin}

### Info

ID: `prot_singlesample`  
Namespace: `multiomics`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/0.12.0/./workflows/multiomics/prot_singlesample){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.12.0 -latest \
  -main-script ./workflows/multiomics/prot_singlesample/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Input
id: # please fill in - example: "foo"
input: # please fill in - example: "dataset.h5mu"

# Output
# output: "$id.$key.output.h5mu"

# Filtering options
# min_counts: 200
# max_counts: 5000000
# min_proteins_per_cell: 200
# max_proteins_per_cell: 1500000
# min_cells_per_protein: 3

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r 0.12.0 -latest \
  -profile docker \
  -main-script ./workflows/multiomics/prot_singlesample/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Input

|Name      |Description         |Attributes                                  |
|:---------|:-------------------|:-------------------------------------------|
|`--id`    |ID of the sample.   |`string`, required, example: `"foo"`        |
|`--input` |Path to the sample. |`file`, required, example: `"dataset.h5mu"` |


### Output

|Name       |Description                     |Attributes                                 |
|:----------|:-------------------------------|:------------------------------------------|
|`--output` |Destination path to the output. |`file`, required, example: `"output.h5mu"` |


### Filtering options

|Name                      |Description                                 |Attributes                    |
|:-------------------------|:-------------------------------------------|:-----------------------------|
|`--min_counts`            |Minimum number of counts captured per cell. |`integer`, example: `200`     |
|`--max_counts`            |Maximum number of counts captured per cell. |`integer`, example: `5000000` |
|`--min_proteins_per_cell` |Minimum of non-zero values per cell.        |`integer`, example: `200`     |
|`--max_proteins_per_cell` |Maximum of non-zero values per cell.        |`integer`, example: `1500000` |
|`--min_cells_per_protein` |Minimum of non-zero values per gene.        |`integer`, example: `3`       |

## Authors


  * Dries De Maeyer [{{< fa brands github >}}](https://github.com/ddemaeyer) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-de-maeyer-b46a814) (author)

  * Robrecht Cannoodt [{{< fa brands github >}}](https://github.com/rcannood) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-3641-729X) [{{< fa brands linkedin >}}](https://linkedin.com/in/robrechtcannoodt) (author, maintainer)

  * Dries Schaumont [{{< fa brands github >}}](https://github.com/DriesSchaumont) [{{< fa brands orcid >}}](https://orcid.org/0000-0002-4389-0440) [{{< fa brands linkedin >}}](https://linkedin.com/in/dries-schaumont) (author)

## Visualisation

```{mermaid}
%%| column: screen-inset-shaded
flowchart LR
    v0(Input)
    v3(toSortedList)
    v5(flatMap)
    v10(filter)
    v16(grep_annotation_column)
    v18(join)
    v22(mix)
    v21(filter)
    v28(calculate_qc_metrics)
    v30(join)
    v38(publish)
    v40(join)
    v49(filter_with_counts)
    v51(join)
    v59(do_filter)
    v61(join)
    v65(toSortedList)
    v67(Output)
    v21-->v22
    v0-->v3
    v3-->v5
    v5-->v10
    v5-->v21
    v10-->v18
    v10-->v16
    v16-->v18
    v18-->v22
    v22-->v30
    v22-->v28
    v28-->v30
    v30-->v40
    v30-->v38
    v38-->v40
    v40-->v51
    v40-->v49
    v49-->v51
    v51-->v61
    v51-->v59
    v59-->v61
    v61-->v65
    v65-->v67

```
