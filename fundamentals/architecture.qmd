---
title: Architecture
order: 30
---

The single-cell workflow is comprised of multiple (standalone) subworkflows.

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-architecture
%%| fig-cap: Overview single cell processing steps in OpenPipeline. Rectangles are data objects, parallelograms are Viash modules or subworkflows.


flowchart TB
  Raw1[/Sample 1/]:::file --> Split
  subgraph FullPipeline [Full Pipeline]
    Split([Split\nmodalities]):::component --> ProcGEX1 & ProcADT1 & ConcatVDJ
    subgraph MultisampleRNA [Multisample RNA]
        ConcatGEX([Concatenate]):::component --> ProcGEX2((Process GEX\nMulti Sample)):::component
    end
    MultisampleRNA:::workflow
    subgraph MultisampleADT [Multisample ADT]
        ConcatADT([Concatenate]):::component -->  ProcADT2((Process ADT\nMulti Sample)):::component
    end
    MultisampleADT:::workflow
    ConcatVDJ([Concatenate]):::component
    NoIntegration[Multisample Multimodality]

    subgraph Unknown["Untreated modality (e.g. VDJ)"]
        ConcatVDJ
    end
    Unknown:::logicalgrouping
    Sample2VDJ[/Sample 2 VDJ/]:::file --> ConcatVDJ
    Sample2Gex[/Sample 2 Gex/]:::file --> ConcatGEX
    Sample2ADT[/Sample 2 ADT/]:::file --> ConcatADT
  
    ProcGEX2 & ProcADT2 --> Merge([Merge\nmodalities]):::component --> NoIntegration:::workflow
    ConcatVDJ ---> Merge
  end


  subgraph Wrapper
    subgraph Integration [Integration]
      subgraph IntegrationRNA[Integration RNA]
          direction LR
          hamony_leiden_rna[Harmony + Leiden]:::workflow
          scvi_rna[scVI]:::workflow
          scanorama[Scanorama]:::workflow
          other[...]:::workflow
      end
      subgraph IntegrationProt[Integration ADT]
          direction LR
          hamony_leiden_prot[Harmony + Leiden]:::workflow
          otherprot[...]:::workflow
      end
      subgraph multimodal_integration[Multimodal integration]
          totalVI([totalVI]):::component
      end
      multimodal_integration:::logicalgrouping
      IntegrationRNA:::logicalgrouping --choose from--> IntegrationProt:::logicalgrouping
      NoIntegration ---> totalVI
    end
    Integration:::logicalgrouping
    subgraph LegendBox[Legend]
      direction LR
      component([component]):::component
      multiple_component((Multiple Components)):::component
      workflow["(Sub)workflow"]:::workflow
      file[/file/]:::file
      Logicalgrouping[Logical grouping]:::logicalgrouping
    end
  LegendBox:::legend
  end
  Wrapper:::hide


  NoIntegration --choose from--> IntegrationRNA
  %% NoIntegration ~~~ LegendBox

  ProcGEX1[Process GEX\nSingle Sample]:::workflow --> ConcatGEX
  ProcADT1[Process ADT\nSingle Sample]:::workflow --> ConcatADT



  style FullPipeline fill: #5cc,font-size:1.4em,color:#000;
  classDef hide fill:transparent,color:transparent,stroke:transparent;
  classDef legend fill:transparent;
  classDef file fill: #5c5c5c,color:#fff,stroke-dasharray: 5 5;
  classDef logicalgrouping fill:transparent,stroke-dasharray: 5 5;
  classDef workflow fill:#ffffde,color:#000;
  classDef component fill:#ececff,color:#000;

```

:::

# Use-cases



:::{.callout-note}
In these use-cases, `Interpretation`, `Conversion` and `Dataset` are omitted because they are the same in every use case.
:::


### A single unimodal sample

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example1
%%| fig-cap: "Example of how the concatenation and merges work.  \nGEX: Gene-expression."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1[/Process GEX\nprofile/]
  ProcGEX1 --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/]
  ProcGEX --> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::


### Multiple unimodal samples

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example3
%%| fig-cap: "Example of how the concatenation and merges work.  \nGEX: Gene-expression."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1[/Process GEX\nprofile/]
  Raw2[Sample 2] --> Split2[/Split\nmodalities/] --> ProcGEX2[/Process GEX\nprofile/]
  Raw3[Sample 3] --> Split3[/Split\nmodalities/] --> ProcGEX3[/Process GEX\nprofile/]
  ProcGEX1 & ProcGEX2 & ProcGEX3 --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/] 
  ProcGEX --> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::


### A single multimodal sample


:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example2
%%| fig-cap: "Example of how the concatenation and merges work.  \nGEX: Gene-expression. ADT: Antibody-Derived Tags. RNAV: RNA Velocity."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1 & ProcADT1 & ProcRNAV1
  ProcGEX1[/Process GEX\nprofile/] --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/]
  ProcADT1[/Process ADT\nprofile/] --> ConcatADT[/Concatenate\nprofiles/] --> ProcADT[/Process ADT\nprofiles/]
  ProcRNAV1[/Process RNAV\nprofile/] --> ConcatRNAV[/Concatenate\nprofiles/] --> ProcRNAV[/Process RNAV\nprofiles/]
  ProcGEX & ProcADT & ProcRNAV--> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::





### Multiple multimodal samples

:::{.column-screen-inset-shaded}

```{mermaid}
%%| label: fig-example4
%%| fig-cap: "Example of how the concat and merges work.  \nGEX: Gene-expression. ADT: Antibody-Derived Tags."

flowchart LR

  Raw1[Sample 1] --> Split1[/Split\nmodalities/] --> ProcGEX1 & ProcADT1
  Raw2[Sample 2] --> Split2[/Split\nmodalities/] --> ProcGEX2 & ProcADT2
  ProcGEX1[/Process GEX\nprofile/] & ProcGEX2[/Process GEX\nprofile/] --> ConcatGEX[/Concatenate\nprofiles/] --> ProcGEX[/Process GEX\nprofiles/]
  ProcADT1[/Process ADT\nprofile/] & ProcADT2[/Process ADT\nprofile/] --> ConcatADT[/Concatenate\nprofiles/] --> ProcADT[/Process ADT\nprofiles/]
  ProcGEX & ProcADT --> Merge[/Merge\nmodalities/] --> Integration[/Integration/]

```

:::
